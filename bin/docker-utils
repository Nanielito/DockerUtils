#!/bin/bash

DOCKER_CMD=$1
DOCKER_CONTAINER=($@)
DOCKER_CONTAINER=(${DOCKER_CONTAINER[@]:1})

COMMANDS=(                                          \
  "pull    [CONTAINER_NAME|...]"                    \
  "up      [CONTAINER_NAME|...]"                    \
  "start   [CONTAINER_NAME|...]"                    \
  "restart [CONTAINER_NAME|...]"                    \
  "stop    [CONTAINER_NAME|...]"                    \
  "rm      [CONTAINER_NAME|...]"                    \
  "clean   [CONTAINER_NAME|...]"                    \
  "exec    CONTAINER_NAME COMMAND [ARGS]"           \
  "logs    [CONTAINER_NAME|...]"                    \
  "ps      [CONTAINER_NAME]"                        \
  "set     CONTAINER_NAME FILE CONTAINER_DIRECTORY" \
  "get     CONTAINER_NAME CONTAINER_FILE DIRECTORY" \
)

function usage() {
   printf '%s\n\t' "Usage: $0 " "${COMMANDS[@]}"
}

case $DOCKER_CMD in
  pull)
    if [ ! -z "$(echo ${DOCKER_CONTAINER[@]})" ]; then
      docker-compose pull ${DOCKER_CONTAINER[@]}
    else
      docker-compose pull
    fi
    ;;
  up)
    if [ ! -z "$(echo ${DOCKER_CONTAINER[@]})" ]; then
      docker-compose up -d ${DOCKER_CONTAINER[@]}
    else
      docker-compose up -d
    fi
    ;;
  start)
    if [ ! -z "$(echo ${DOCKER_CONTAINER[@]})" ]; then
      docker-compose start ${DOCKER_CONTAINER[@]}
    else
      docker-compose start
    fi
    ;;
  restart)
    if [ ! -z "$(echo ${DOCKER_CONTAINER[@]})" ]; then
      docker-compose restart ${DOCKER_CONTAINER[@]}
    else
      docker-compose restart
    fi
    ;;
  stop)
    if [ ! -z "$(echo ${DOCKER_CONTAINER[@]})" ]; then
      docker-compose stop ${DOCKER_CONTAINER[@]}
    else
      docker-compose stop
    fi
    ;;
  rm)
    if [ ! -z "$(echo ${DOCKER_CONTAINER[@]})" ]; then
      docker-compose rm -f ${DOCKER_CONTAINER[@]}
    else
      docker-compose rm -f
    fi
    ;;
  clean)
    if [ ! -z "$(echo ${DOCKER_CONTAINER[@]})" ]; then
      docker-compose stop ${DOCKER_CONTAINER[@]}
      docker-compose rm -f ${DOCKER_CONTAINER[@]}
    else
      docker-compose stop
      docker-compose rm -f
    fi
    ;;
  exec)
    DOCKER_CONTAINER=${DOCKER_CONTAINER[0]}
    CONTAINER_CMD=$3
    ARGUMENTS=($@)
    ARGUMENTS=(${ARGUMENTS[@]:3})
    ARGUMENTS=$(echo ${ARGUMENTS[@]})
    
    if [ -z "$CONTAINER_CMD" ]; then
      CONTAINER_CMD="bash"
    fi

    if [ ! -z "$ARGUMENTS" ]; then
      docker-compose exec $DOCKER_CONTAINER $CONTAINER_CMD -c "$ARGUMENTS"
    else
      docker-compose exec $DOCKER_CONTAINER $CONTAINER_CMD
    fi
    ;;
  logs)
    if [ ! -z "$(echo ${DOCKER_CONTAINER[@]})" ]; then
      docker-compose logs -f ${DOCKER_CONTAINER[@]}
    else
      docker-compose logs -f
    fi
    ;;
  ps)
    if [ ! -z "$(echo ${DOCKER_CONTAINER[@]})" ]; then
      docker-compose ps ${DOCKER_CONTAINER[@]}
    else
      docker-compose ps
    fi
    ;;
  set)
    DOCKER_CONTAINER=${DOCKER_CONTAINER[0]}
    FILE=$3
    CONTAINER_DIRECTORY=$4

    docker cp $FILE $DOCKER_CONTAINER:$CONTAINER_DIRECTORY
    ;;
  get)
    DOCKER_CONTAINER=${DOCKER_CONTAINER[0]}
    CONTAINER_FILE=$3
    DIRECTORY=$4

    docker cp $DOCKER_CONTAINER:$CONTAINER_FILE $DIRECTORY
    ;;
  *)
    usage
    exit 1
esac
