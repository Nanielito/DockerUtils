#!/bin/bash

DOCKER_CMD=$1
DOCKER_CONTAINER=$2

COMMANDS=(\
  "pull  [CONTAINER_NAME|...]"                    \
  "up    [CONTAINER_NAME|...]"                    \
  "start [CONTAINER_NAME|...]"                    \
  "stop  [CONTAINER_NAME|...]"                    \
  "rm    [CONTAINER_NAME|...]"                    \
  "clean [CONTAINER_NAME|...]"                    \
  "exec  CONTAINER_NAME COMMAND [ARGS]"           \
  "logs  [CONTAINER_NAME|...]"                    \
  "ps    [CONTAINER_NAME]"                        \
  "cp    CONTAINER_NAME FILE CONTAINER_DIRECTORY" \
)

function usage() {
   printf '%s\n\t' "Usage: $0 " "${COMMANDS[@]}"
}

case $DOCKER_CMD in
  pull)
    if [ ! -z "$DOCKER_CONTAINER" ];then
      docker-compose pull $CONTAINER_NAME
    else
      docker-compose pull
    fi
    ;;
  up)
    if [ ! -z "$DOCKER_CONTAINER" ]; then
      docker-compose up -d $DOCKER_CONTAINER
    else
      docker-compose up -d
    fi
    ;;
  start)
    if [ ! -z "$DOCKER_CONTAINER" ]; then
      docker-compose start $DOCKER_CONTAINER
    else
      docker-compose start
    fi
    ;;
  stop)
    if [ ! -z "$DOCKER_CONTAINER" ]; then
      docker-compose stop $DOCKER_CONTAINER
    else
      docker-compose stop
    fi
    ;;
  rm)
    if [ ! -z "$DOCKER_CONTAINER" ]; then
      docker-compose rm -f $DOCKER_CONTAINER
    else
      docker-compose rm -f
    fi
    ;;
  clean)
    if [ ! -z "$DOCKER_CONTAINER" ]; then
      docker-compose stop $DOCKER_CONTAINER
      docker-compose rm -f $DOCKER_CONTAINER
    else
      docker-compose stop
      docker-compose rm -f
    fi
    ;;
  exec)
    CONTAINER_CMD=$3
    ARGUMENTS=($@)
    ARGUMENTS=(${ARGUMENTS[@]:3})
    ARGUMENTS=$(echo ${ARGUMENTS[@]})
    
    if [ -z "$CONTAINER_CMD" ]; then
      CONTAINER_CMD="bash"
    fi

    if [ ! -z "$ARGUMENTS" ]; then
      docker-compose exec $DOCKER_CONTAINER $CONTAINER_CMD -c "$ARGUMENTS"
    else
      docker-compose exec $DOCKER_CONTAINER $CONTAINER_CMD
    fi
    ;;
  logs)
    if [ ! -z "$DOCKER_CONTAINER" ]; then
      docker-compose logs -f $DOCKER_CONTAINER
    else
      docker-compose logs -f
    fi
    ;;
  ps)
    if [ ! -z "$DOCKER_CONTAINER" ]; then
      docker-compose ps $DOCKER_CONTAINER
    else
      docker-compose ps
    fi
    ;;
  cp)
    FILE=$3
    CONTAINER_DIRECTORY=$4
    
    docker cp $FILE $DOCKER_CONTAINER:$CONTAINER_DIRECTORY
    ;;
  *)
    usage
    exit 1
esac
